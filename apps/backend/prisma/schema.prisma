generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String?  // Optional for OAuth users
  name        String?  // Name from OAuth provider
  provider    String?  // OAuth provider (e.g., 'google', 'facebook')
  providerId  String?  // Unique ID from OAuth provider
  usedStorage Int      @default(0) // Track used storage in bytes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  files       File[]
}

model File {
  id        String   @id @default(uuid())
  ownerId   String
  fileName  String
  fileSize  Int      
  s3Key     String
  thumbnail String   @default("https://user-images.githubusercontent.com/28399150/84749918-e80a7a00-afba-11ea-9d76-b807379b52ab.png")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner     User     @relation(fields: [ownerId], references: [id])
  links     Link[]
}

model Link {
  id          String     @id @default(uuid())
  fileId      String
  linkToken   String     @unique
  permissions Permission
  expiryDate  DateTime?
  createdAt   DateTime   @default(now())
  accesses    Access[]
  file        File       @relation(fields: [fileId], references: [id])
}

model Access {
  id              String     @id @default(uuid())
  linkId          String
  email           String
  permissionLevel Permission
  link            Link       @relation(fields: [linkId], references: [id])

  @@unique([linkId, email])
}

enum Permission {
  VIEW
  EDIT
}
